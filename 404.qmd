---
title: "404"
---


```{ojs}
//| echo: false

yaml = require('js-yaml')
projaml = FileAttachment('./projects.yaml').text()
confyaml = FileAttachment('./conference.yaml').text()

towns = FileAttachment('towns.json').json()

conf_data = yaml.load(confyaml).map((d) => ({
  name : d.title,
  town: d.town,
  coordinates : towns.find((t) => (t.name == d.town)).coordinates,
  region : towns.find((t) => (t.name == d.town)).region,
  type: 'conference',
  year: d.year,
  end: d.end,
  days: d.days

}))
sorted_c = conf_data.sort(d => d.end)

raw_points = [].concat(
conf_data,
yaml.load(projaml).map((d) => ({
  name : d.name,
  town: d.town,
  coordinates : towns.find((t) => (t.name == d.town)).coordinates,
  region : towns.find((t) => (t.name == d.town)).region,
  type: 'project',
  year: d.year,
  end: d.end,
  url: d.url

}))
)

gathered_points = raw_points.sort((d) => (d.end, d.name))

```

```{ojs}

sorted = raw_points.sort(d => (d.year))
pre_timeline = Array.from(d3.group(sorted, d=> d.year))

function ark(){
    let data = []
    for (let start_year of pre_timeline) {
        // console.log(start_year)
        let year = start_year[0]
        let end = start_year[1].map(d => d.end).sort(d => d)[0]
        // console.log('from', year, 'to',  end)
        for (let i = year; i <= end; i++){
            let row = {
                label: year,
                year: i,
                value: start_year[1].filter(d => d.year <= i & d.end >= i).length
                   }
            data.push(row)
        }
    }
    return data
}

ark()

```
